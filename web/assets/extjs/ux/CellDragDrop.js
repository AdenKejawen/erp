Ext.define("Ext.ux.CellDragDrop",{extend:"Ext.AbstractPlugin",alias:"plugin.celldragdrop",uses:["Ext.view.DragZone"],enforceType:false,applyEmptyText:false,emptyText:"",dropBackgroundColor:"green",noDropBackgroundColor:"red",dragText:"{0} selected row{1}",ddGroup:"GridDD",enableDrop:true,enableDrag:true,containerScroll:false,init:function(a){var b=this;a.on("render",b.onViewRender,b,{single:true})},destroy:function(){var a=this;Ext.destroy(a.dragZone,a.dropZone)},enable:function(){var a=this;if(a.dragZone){a.dragZone.unlock()}if(a.dropZone){a.dropZone.unlock()}a.callParent()},disable:function(){var a=this;if(a.dragZone){a.dragZone.lock()}if(a.dropZone){a.dropZone.lock()}a.callParent()},onViewRender:function(a){var b=this,c;if(b.enableDrag){if(b.containerScroll){c=a.getEl()}b.dragZone=new Ext.view.DragZone({view:a,ddGroup:b.dragGroup||b.ddGroup,dragText:b.dragText,containerScroll:b.containerScroll,scrollEl:c,getDragData:function(j){var g=this.view,i=j.getTarget(g.getItemSelector()),f=g.getRecord(i),h=j.getTarget("td.x-grid-cell"),d;if(i){d=document.createElement("div");d.className="x-form-text";d.appendChild(document.createTextNode(h.textContent||h.innerText));return{event:new Ext.EventObjectImpl(j),ddel:d,item:j.target,columnName:g.getGridColumns()[h.cellIndex].dataIndex,record:f}}},onInitDrag:function(l,j){var m=this,g=m.dragData,k=m.view,f=k.getSelectionModel(),h=g.record,i=g.event,d=g.ddel;if(!f.isSelected(h)){f.select(h,true)}m.ddel.update(d.textContent||d.innerText);m.proxy.update(m.ddel.dom);m.onStartDrag(l,j);return true}})}if(b.enableDrop){b.dropZone=new Ext.dd.DropZone(a.el,{view:a,ddGroup:b.dropGroup||b.ddGroup,containerScroll:true,getTargetFromEvent:function(i){var g=this,f=g.view,d=i.getTarget(f.cellSelector),j,h;if(d){j=f.findItemByChild(d);h=d.cellIndex;if(j&&Ext.isDefined(h)){return{node:d,record:f.getRecord(j),columnName:g.view.up("grid").columns[h].dataIndex}}}},onNodeEnter:function(h,l,i,f){var m=this;delete m.dropOK;if(!h||h.node===f.item.parentNode){return}var d=h.record.fields.get(h.columnName).type.type.toUpperCase(),j=f.record.fields.get(f.columnName).type.type.toUpperCase(),g=Ext.data.Types,k;if(b.enforceType){if(d!==j){m.dropOK=false;if(b.noDropCls){Ext.fly(h.node).addCls(b.noDropCls)}else{Ext.fly(h.node).applyStyles({backgroundColor:b.noDropBackgroundColor})}return}}m.dropOK=true;if(b.dropCls){Ext.fly(h.node).addCls(b.dropCls)}else{Ext.fly(h.node).applyStyles({backgroundColor:b.dropBackgroundColor})}},onNodeOver:function(i,d,h,g){var f=this;return f.dropOK?f.dropAllowed:f.dropNotAllowed},onNodeOut:function(i,d,h,g){var f=this.dropOK?b.dropCls:b.noDropCls;if(f){Ext.fly(i.node).removeCls(f)}else{Ext.fly(i.node).applyStyles({backgroundColor:""})}},onNodeDrop:function(k,d,j,i){var f=this,h,g;if(f.dropOK){g=i.record.get(i.columnName);k.record.set(k.columnName,g);if(b.applyEmptyText){i.record.set(i.columnName,b.emptyText)}return true}},onCellDrop:Ext.emptyFn})}}});