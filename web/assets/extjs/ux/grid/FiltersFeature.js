Ext.define("Ext.ux.grid.FiltersFeature",{extend:"Ext.grid.feature.Feature",alias:"feature.filters",uses:["Ext.ux.grid.menu.ListMenu","Ext.ux.grid.menu.RangeMenu","Ext.ux.grid.filter.BooleanFilter","Ext.ux.grid.filter.DateFilter","Ext.ux.grid.filter.DateTimeFilter","Ext.ux.grid.filter.ListFilter","Ext.ux.grid.filter.NumericFilter","Ext.ux.grid.filter.StringFilter"],autoReload:true,filterCls:"ux-filtered-column",local:false,menuFilterText:"Filters",paramPrefix:"filter",showMenu:true,stateId:undefined,updateBuffer:500,hasFeatureEvent:false,constructor:function(a){var b=this;b.callParent(arguments);b.deferredUpdate=Ext.create("Ext.util.DelayedTask",b.reload,b);b.filters=b.createFiltersCollection();b.filterConfigs=a.filters},init:function(b){var c=this,a=c.view,d=a.headerCt;c.bindStore(a.getStore(),true);d.on("menucreate",c.onMenuCreate,c);a.on("refresh",c.onRefresh,c);b.on({scope:c,beforestaterestore:c.applyState,beforestatesave:c.saveState,beforedestroy:c.destroy});b.filters=c;b.addEvents("filterupdate")},createFiltersCollection:function(){return Ext.create("Ext.util.MixedCollection",false,function(a){return a?a.dataIndex:null})},createFilters:function(){var h=this,g=h.filters.getCount(),a=h.getGridPanel(),d=h.createFiltersCollection(),e=a.store.model,f=e.prototype.fields,i,c,b;if(g){b={};h.saveState(null,b)}function j(l,k,m){if(l&&(m||k)){i=f.get(l);c={dataIndex:l,type:(i&&i.type&&i.type.type)||"auto"};if(Ext.isObject(k)){Ext.apply(c,k)}d.replace(c)}}Ext.Array.each(h.filterConfigs,function(k){j(k.dataIndex,k)});Ext.Array.each(a.columnManager.getColumns(),function(k){if(k.filterable===false){d.removeAtKey(k.dataIndex)}else{j(k.dataIndex,k.filter,k.filterable)}});h.removeAll();if(d.items){h.initializeFilters(d.items)}if(g){h.applyState(null,b)}},initializeFilters:function(e){var d=this,f=e.length,b,c,a;for(b=0;b<f;b++){c=e[b];if(c){a=d.getFilterClass(c.type);c=c.menu?c:new a(Ext.apply({grid:d.grid},c));d.filters.add(c);Ext.util.Observable.capture(c,this.onStateChange,this)}}},onMenuCreate:function(c,b){var a=this;a.createFilters();b.on("beforeshow",a.onMenuBeforeShow,a)},onMenuBeforeShow:function(d){var c=this,b,a;if(c.showMenu){b=c.menuItem;if(!b||b.isDestroyed){c.createMenuItem(d);b=c.menuItem}a=c.getMenuFilter();if(a){b.setMenu(a.menu,false);b.setChecked(a.active);b.setDisabled(a.disabled===true)}b.setVisible(!!a);this.sep.setVisible(!!a)}},createMenuItem:function(b){var a=this;a.sep=b.add("-");a.menuItem=b.add({checked:false,itemId:"filters",text:a.menuFilterText,listeners:{scope:a,checkchange:a.onCheckChange,beforecheckchange:a.onBeforeCheck}})},getGridPanel:function(){return this.view.up("gridpanel")},applyState:function(b,e){var d=this,a,c;d.applyingState=true;d.clearFilters();if(e.filters){for(a in e.filters){if(e.filters.hasOwnProperty(a)){c=d.filters.get(a);if(c){c.setValue(e.filters[a]);c.setActive(true)}}}}d.deferredUpdate.cancel();if(d.local){d.reload()}delete d.applyingState;delete e.filters},saveState:function(a,c){var b={};this.filters.each(function(d){if(d.active){b[d.dataIndex]=d.getValue()}});return(c.filters=b)},destroy:function(){var a=this;Ext.destroyMembers(a,"menuItem","sep");a.removeAll();a.clearListeners()},removeAll:function(){if(this.filters){Ext.destroy.apply(Ext,this.filters.items);this.filters.clear()}},bindStore:function(a){var b=this;if(b.store&&b.storeListeners){b.store.un(b.storeListeners)}if(a){b.storeListeners={scope:b};if(b.local){b.storeListeners.load=b.onLoad}else{b.storeListeners["before"+(a.buffered?"prefetch":"load")]=b.onBeforeLoad}a.on(b.storeListeners)}else{delete b.storeListeners}b.store=a},getMenuFilter:function(){var a=this.view.headerCt.getMenu().activeHeader;return a?this.filters.get(a.dataIndex):null},onCheckChange:function(a,b){this.getMenuFilter().setActive(b)},onBeforeCheck:function(a,b){return !b||this.getMenuFilter().isActivatable()},onStateChange:function(d,b){if(d!=="serialize"){var c=this,a=c.getGridPanel();if(b==c.getMenuFilter()){c.menuItem.setChecked(b.active,false)}if((c.autoReload||c.local)&&!c.applyingState){c.deferredUpdate.delay(c.updateBuffer)}c.updateColumnHeadings();if(!c.applyingState){a.saveState()}a.fireEvent("filterupdate",c,b)}},onBeforeLoad:function(a,b){b.params=b.params||{};this.cleanParams(b.params);var c=this.buildQuery(this.getFilterData());Ext.apply(b.params,c)},onLoad:function(a){a.filterBy(this.getRecordFilter())},onRefresh:function(){this.updateColumnHeadings()},updateColumnHeadings:function(){var a=this,b=a.view.headerCt;if(b){b.items.each(function(d){var c=a.getFilter(d.dataIndex);d[c&&c.active?"addCls":"removeCls"](a.filterCls)})}},reload:function(){var b=this,a=b.view.getStore();if(b.local){a.clearFilter(true);a.filterBy(b.getRecordFilter());a.sort()}else{b.deferredUpdate.cancel();if(a.buffered){a.data.clear()}a.loadPage(1)}},getRecordFilter:function(){var d=[],a,b,c=this.lockingPartner;this.filters.each(function(e){if(e.active){d.push(e)}});if(c){c.filters.each(function(e){if(e.active){d.push(e)}})}a=d.length;return function(e){for(b=0;b<a;b++){if(!d[b].validateRecord(e)){return false}}return true}},addFilter:function(a){var f=this,c=f.getGridPanel().columnManager.getColumns(),b,h,e,g,d;for(b=0,h=c.length;b<h;b++){e=c[b];if(e.dataIndex===a.dataIndex){e.filter=a}}if(f.view.headerCt.menu){f.createFilters()}else{f.view.headerCt.getMenu()}for(b=0,g=f.filters.items.length;b<g;b++){d=f.filters.items[b];if(d.dataIndex===a.dataIndex){return d}}},addFilters:function(c){if(c){var b=this,a,d;for(a=0,d=c.length;a<d;a++){b.addFilter(c[a])}}},getFilter:function(a){return this.filters.get(a)},clearFilters:function(){this.filters.each(function(a){a.setActive(false)})},getFilterItems:function(){var a=this;if(a.lockingPartner){return a.filters.items.concat(a.lockingPartner.filters.items)}return a.filters.items},getFilterData:function(){var c=this.getFilterItems(),g=[],j,b,f,h,e,a;for(j=0,b=c.length;j<b;j++){f=c[j];if(f.active){h=[].concat(f.serialize());for(e=0,a=h.length;e<a;e++){g.push({field:f.dataIndex,data:h[e]})}}}return g},buildQuery:function(b){var a={},c,h,j,e,k,d,g=b.length;if(!this.encode){for(c=0;c<g;c++){h=b[c];j=[this.paramPrefix,"[",c,"]"].join("");a[j+"[field]"]=h.field;e=j+"[data]";for(k in h.data){a[[e,"[",k,"]"].join("")]=h.data[k]}}}else{d=[];for(c=0;c<g;c++){h=b[c];d.push(Ext.apply({},{field:h.field},h.data))}if(d.length>0){a[this.paramPrefix]=Ext.JSON.encode(d)}}return a},cleanParams:function(c){if(this.encode){delete c[this.paramPrefix]}else{var b,a;b=new RegExp("^"+this.paramPrefix+"[[0-9]+]");for(a in c){if(b.test(a)){delete c[a]}}}},getFilterClass:function(a){switch(a){case"auto":a="string";break;case"int":case"float":a="numeric";break;case"bool":a="boolean";break}return Ext.ClassManager.getByAlias("gridfilter."+a)}});