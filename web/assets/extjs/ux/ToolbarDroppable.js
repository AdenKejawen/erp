Ext.define("Ext.ux.ToolbarDroppable",{constructor:function(a){Ext.apply(this,a)},init:function(a){this.toolbar=a;this.toolbar.on({scope:this,render:this.createDropTarget})},createDropTarget:function(){this.dropTarget=Ext.create("Ext.dd.DropTarget",this.toolbar.getEl(),{notifyOver:Ext.Function.bind(this.notifyOver,this),notifyDrop:Ext.Function.bind(this.notifyDrop,this)})},addDDGroup:function(a){this.dropTarget.addToGroup(a)},calculateEntryIndex:function(h){var j=0,k=this.toolbar,i=k.items.items,f=i.length,b=h.getXY()[0],g=0,c,d,a,l;for(;g<f;g++){c=i[g].getEl();d=c.getXY()[0];a=c.getWidth();l=d+a/2;if(b<l){j=g;break}else{j=g+1}}return j},canDrop:function(a){return true},notifyOver:function(a,b,c){return this.canDrop.apply(this,arguments)?this.dropTarget.dropAllowed:this.dropTarget.dropNotAllowed},notifyDrop:function(a,d,e){var c=this.canDrop(a,d,e),f=this.toolbar;if(c){var b=this.calculateEntryIndex(d);f.insert(b,this.createItem(e));f.doLayout();this.afterLayout()}return c},createItem:function(a){Ext.Error.raise("The createItem method must be implemented in the ToolbarDroppable plugin")},afterLayout:Ext.emptyFn});