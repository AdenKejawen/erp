Ext.define("Ext.panel.Table",{extend:"Ext.panel.Panel",alias:"widget.tablepanel",uses:["Ext.selection.RowModel","Ext.selection.CellModel","Ext.selection.CheckboxModel","Ext.grid.plugin.BufferedRenderer","Ext.grid.header.Container","Ext.grid.locking.Lockable"],extraBaseCls:Ext.baseCSSPrefix+"grid",extraBodyCls:Ext.baseCSSPrefix+"grid-body",layout:"fit",hasView:false,viewType:null,selType:"rowmodel",scroll:true,deferRowRender:true,sortableColumns:true,enableLocking:false,scrollerOwner:true,enableColumnMove:true,sealedColumns:false,enableColumnResize:true,rowLines:true,colLinesCls:Ext.baseCSSPrefix+"grid-with-col-lines",rowLinesCls:Ext.baseCSSPrefix+"grid-with-row-lines",noRowLinesCls:Ext.baseCSSPrefix+"grid-no-row-lines",hiddenHeaderCtCls:Ext.baseCSSPrefix+"grid-header-ct-hidden",hiddenHeaderCls:Ext.baseCSSPrefix+"grid-header-hidden",resizeMarkerCls:Ext.baseCSSPrefix+"grid-resize-marker",emptyCls:Ext.baseCSSPrefix+"grid-empty",initComponent:function(){if(!this.viewType){Ext.Error.raise("You must specify a viewType config.")}if(this.headers){Ext.Error.raise("The headers config is not supported. Please specify columns instead.")}var f=this,g=f.columns||f.colModel,b,e,a,c=f.store=Ext.data.StoreManager.lookup(f.store||"ext-empty-store"),d;if(f.columnLines){f.addCls(f.colLinesCls)}f.addCls(f.rowLines?f.rowLinesCls:f.noRowLinesCls);if(!g){Ext.Error.raise("A column configuration must be specified")}if(g instanceof Ext.grid.header.Container){g.isRootHeader=true;f.headerCt=g}else{if(f.enableLocking||f.hasLockedColumns(g)){f.self.mixin("lockable",Ext.grid.locking.Lockable);f.injectLockable()}else{if(Ext.isArray(g)){g={items:g}}Ext.apply(g,{grid:f,forceFit:f.forceFit,sortable:f.sortableColumns,enableColumnMove:f.enableColumnMove,enableColumnResize:f.enableColumnResize,sealed:f.sealedColumns,isRootHeader:true});if(Ext.isDefined(f.enableColumnHide)){g.enableColumnHide=f.enableColumnHide}if(!f.headerCt){f.headerCt=new Ext.grid.header.Container(g)}}}f.columns=f.headerCt.getGridColumns();f.scrollTask=new Ext.util.DelayedTask(f.syncHorizontalScroll,f);f.addEvents("reconfigure","viewready");f.bodyCls=f.bodyCls||"";f.bodyCls+=(" "+f.extraBodyCls);f.cls=f.cls||"";f.cls+=(" "+f.extraBaseCls);delete f.autoScroll;if(!f.hasView){d=f.headerCt.getGridColumns();if(c.buffered&&!c.remoteSort){for(e=0,a=d.length;e<a;e++){d[e].sortable=false}}if(f.hideHeaders){f.headerCt.height=0;f.headerCt.hiddenHeaders=true;f.headerCt.addCls(f.hiddenHeaderCtCls);f.addCls(f.hiddenHeaderCls);if(Ext.isIEQuirks){f.headerCt.style={display:"none"}}}f.relayHeaderCtEvents(f.headerCt);f.features=f.features||[];if(!Ext.isArray(f.features)){f.features=[f.features]}f.dockedItems=[].concat(f.dockedItems||[]);f.dockedItems.unshift(f.headerCt);f.viewConfig=f.viewConfig||{};b=f.getView();f.items=[b];f.hasView=true;if(!f.hideHeaders){b.on({scroll:{fn:f.onHorizontalScroll,element:"el",scope:f}})}f.bindStore(c,true);f.mon(b,{viewready:f.onViewReady,refresh:f.onRestoreHorzScroll,scope:f})}f.relayEvents(f.view,["beforeitemmousedown","beforeitemmouseup","beforeitemmouseenter","beforeitemmouseleave","beforeitemclick","beforeitemdblclick","beforeitemcontextmenu","itemmousedown","itemmouseup","itemmouseenter","itemmouseleave","itemclick","itemdblclick","itemcontextmenu","beforecellclick","cellclick","beforecelldblclick","celldblclick","beforecellcontextmenu","cellcontextmenu","beforecellmousedown","cellmousedown","beforecellmouseup","cellmouseup","beforecellkeydown","cellkeydown","beforecontainermousedown","beforecontainermouseup","beforecontainermouseover","beforecontainermouseout","beforecontainerclick","beforecontainerdblclick","beforecontainercontextmenu","containermouseup","containermouseover","containermouseout","containerclick","containerdblclick","containercontextmenu","selectionchange","beforeselect","select","beforedeselect","deselect"]);f.callParent(arguments);f.addStateEvents(["columnresize","columnmove","columnhide","columnshow","sortchange","filterchange"]);if(!f.lockable&&f.headerCt){f.headerCt.on("afterlayout",f.onRestoreHorzScroll,f)}},hasLockedColumns:function(c){var b,a,d;if(Ext.isObject(c)){c=c.items}for(b=0,a=c.length;b<a;b++){d=c[b];if(!d.processed&&d.locked){return true}}},relayHeaderCtEvents:function(a){this.relayEvents(a,["columnresize","columnmove","columnhide","columnshow","columnschanged","sortchange","headerclick","headercontextmenu","headertriggerclick"])},getState:function(){var b=this,c=b.callParent(),a=b.store.getState();c=b.addPropertyToState(c,"columns",b.headerCt.getColumnsState());if(a){c.storeState=a}return c},applyState:function(e){var d=this,f=e.sort,a=e.storeState,b=d.store,c=e.columns;delete e.columns;d.callParent(arguments);if(c){d.headerCt.applyColumnsState(c)}if(f){if(b.remoteSort){b.sort({property:f.property,direction:f.direction,root:f.root},null,false)}else{b.sort(f.property,f.direction)}}else{if(a){b.applyState(a)}}},getStore:function(){return this.store},getView:function(){var a=this,b;if(!a.view){b=a.getSelectionModel();Ext.widget(Ext.apply({grid:a,deferInitialRefresh:a.deferRowRender!==false,trackOver:a.trackMouseOver!==false,scroll:a.scroll,xtype:a.viewType,store:a.store,headerCt:a.headerCt,columnLines:a.columnLines,rowLines:a.rowLines,selModel:b,features:a.features,panel:a,emptyText:a.emptyText||""},a.viewConfig));if(a.view.emptyText){a.view.emptyText='<div class="'+a.emptyCls+'">'+a.view.emptyText+"</div>"}a.view.getComponentLayout().headerCt=a.headerCt;a.mon(a.view,{uievent:a.processEvent,scope:a});b.view=a.view;a.headerCt.view=a.view}return a.view},setAutoScroll:Ext.emptyFn,processEvent:function(g,i,j,a,h,d,c,k){var f=this,b;if(h!==-1){b=f.columnManager.getColumns()[h];return b.processEvent.apply(b,arguments)}},determineScrollbars:function(){Ext.log.warn("Obsolete")},invalidateScroller:function(){Ext.log.warn("Obsolete")},scrollByDeltaY:function(b,a){this.getView().scrollBy(0,b,a)},scrollByDeltaX:function(b,a){this.getView().scrollBy(b,0,a)},afterCollapse:function(){var a=this;a.saveScrollPos();a.saveScrollPos();a.callParent(arguments)},afterExpand:function(){var a=this;a.callParent(arguments);a.restoreScrollPos();a.restoreScrollPos()},saveScrollPos:Ext.emptyFn,restoreScrollPos:Ext.emptyFn,onHeaderResize:function(){this.delayScroll()},onHeaderMove:function(e,f,a,b,d){var c=this;if(c.optimizedColumnMove===false){c.view.refresh()}else{c.view.moveColumn(b,d,a)}c.delayScroll()},onHeaderHide:function(a,b){this.view.refresh();this.delayScroll()},onHeaderShow:function(a,b){this.view.refresh();this.delayScroll()},delayScroll:function(){var a=this.getScrollTarget().el;if(a){this.scrollTask.delay(10,null,null,[a.dom.scrollLeft])}},onViewReady:function(){this.fireEvent("viewready",this)},onRestoreHorzScroll:function(){var a=this.scrollLeftPos;if(a){this.syncHorizontalScroll(a,true)}},getScrollerOwner:function(){var a=this;if(!this.scrollerOwner){a=this.up("[scrollerOwner]")}return a},getLhsMarker:function(){var a=this;return a.lhsMarker||(a.lhsMarker=Ext.DomHelper.append(a.el,{cls:a.resizeMarkerCls},true))},getRhsMarker:function(){var a=this;return a.rhsMarker||(a.rhsMarker=Ext.DomHelper.append(a.el,{cls:a.resizeMarkerCls},true))},getSelectionModel:function(){var c=this,a=c.selModel,e,d,b;if(!a){a={};e=true}if(!a.events){b=a.selType||c.selType;e=!a.mode;a=c.selModel=Ext.create("selection."+b,a)}if(c.simpleSelect){d="SIMPLE"}else{if(c.multiSelect){d="MULTI"}}Ext.applyIf(a,{allowDeselect:c.allowDeselect});if(d&&e){a.setSelectionMode(d)}if(!a.hasRelaySetup){c.relayEvents(a,["selectionchange","beforeselect","beforedeselect","select","deselect"]);a.hasRelaySetup=true}if(c.disableSelection){a.locked=true}return a},getScrollTarget:function(){var a=this.getScrollerOwner(),b=a.query("tableview");return b[1]||b[0]},onHorizontalScroll:function(a,b){this.syncHorizontalScroll(b.scrollLeft)},syncHorizontalScroll:function(d,b){var c=this,a;b=b===true;if(c.rendered&&(b||d!==c.scrollLeftPos)){if(b){a=c.getScrollTarget();a.el.dom.scrollLeft=d}c.headerCt.el.dom.scrollLeft=d;c.scrollLeftPos=d}},onStoreLoad:Ext.emptyFn,getEditorParent:function(){return this.body},bindStore:function(b,c){var d=this,a=d.getView(),e=b&&b.buffered,f;d.store=b;f=d.findPlugin("bufferedrenderer");if(f){d.verticalScroller=f;if(f.store){f.bindStore(b)}}else{if(e){d.verticalScroller=f=d.addPlugin(Ext.apply({ptype:"bufferedrenderer"},d.initialConfig.verticalScroller))}}if(a.store!==b){if(c){a.bindStore(b,false,"dataSource")}else{a.bindStore(b,false)}}d.mon(b,{load:d.onStoreLoad,scope:d});d.storeRelayers=d.relayEvents(b,["filterchange"]);if(f){d.invalidateScrollerOnRefresh=false}if(d.invalidateScrollerOnRefresh!==undefined){a.preserveScrollOnRefresh=!d.invalidateScrollerOnRefresh}},unbindStore:function(){var b=this,a=b.store;if(a){b.store=null;b.mun(a,{load:b.onStoreLoad,scope:b});Ext.destroy(b.storeRelayers)}},reconfigure:function(b,e){var f=this,a=f.getView(),d,h=f.store,g=f.headerCt,c=g?g.items.getRange():f.columns;if(e){e=Ext.Array.slice(e)}f.fireEvent("beforereconfigure",f,b,e,h,c);if(f.lockable){f.reconfigureLockable(b,e)}else{Ext.suspendLayouts();if(e){delete f.scrollLeftPos;g.removeAll();g.add(e)}if(b&&(b=Ext.StoreManager.lookup(b))!==h){if(f.store){f.unbindStore()}d=a.deferInitialRefresh;a.deferInitialRefresh=false;f.bindStore(b);a.deferInitialRefresh=d}else{f.getView().refresh()}g.setSortState();Ext.resumeLayouts(true)}f.fireEvent("reconfigure",f,b,e,h,c)},beforeDestroy:function(){var a=this.scrollTask;if(a){a.cancel();this.scrollTask=null}this.callParent()},onDestroy:function(){if(this.lockable){this.destroyLockable()}this.callParent()}});