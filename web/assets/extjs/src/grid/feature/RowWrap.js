Ext.define("Ext.grid.feature.RowWrap",{extend:"Ext.grid.feature.Feature",alias:"feature.rowwrap",rowWrapTd:"td."+Ext.baseCSSPrefix+"grid-rowwrap",hasFeatureEvent:false,tableTpl:{before:function(a,b){if(a.view.bufferedRenderer){a.view.bufferedRenderer.variableRowHeight=true}},priority:200},wrapTpl:['<tr data-boundView="{view.id}" data-recordId="{record.internalId}" data-recordIndex="{recordIndex}" class="{[values.itemClasses.join(" ")]} '+Ext.baseCSSPrefix+'grid-wrap-row">','<td class="'+Ext.baseCSSPrefix+"grid-rowwrap "+Ext.baseCSSPrefix+'grid-td" colSpan="{columns.length}">','<table class="'+Ext.baseCSSPrefix+"{view.id}-table "+Ext.baseCSSPrefix+'grid-table" border="0" cellspacing="0" cellpadding="0">',"{[values.view.renderColumnSizer(out)]}","{%","values.itemClasses.length = 0;","this.nextTpl.applyOut(values, out, parent)","%}","</table>","</td>","</tr>",{priority:200}],init:function(a){var b=this;b.view.addTableTpl(b.tableTpl);b.view.addRowTpl(Ext.XTemplate.getTpl(b,"wrapTpl"));b.view.headerCt.on({columnhide:b.onColumnHideShow,columnshow:b.onColumnHideShow,scope:b})},onColumnHideShow:function(){var b=this.view,c=b.el.query(this.rowWrapTd),e=b.headerCt.getVisibleGridColumns().length,a=c.length,d;for(d=0;d<a;++d){c[d].colSpan=e}}});