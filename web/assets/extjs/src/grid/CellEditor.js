Ext.define("Ext.grid.CellEditor",{extend:"Ext.Editor",constructor:function(a){a=Ext.apply({},a);if(a.field){a.field.monitorTab=false}this.callParent([a])},onShow:function(){var a=this,b=a.boundEl.first();if(b){if(a.isForTree){b=b.child(a.treeNodeSelector)}b.hide()}a.callParent(arguments)},onHide:function(){var a=this,b=a.boundEl.first();if(b){if(a.isForTree){b=b.child(a.treeNodeSelector)}b.show()}a.callParent(arguments)},afterRender:function(){var a=this,b=a.field;a.callParent(arguments);if(b.isCheckbox){b.mon(b.inputEl,{mousedown:a.onCheckBoxMouseDown,click:a.onCheckBoxClick,scope:a})}},onCheckBoxMouseDown:function(){this.completeEdit=Ext.emptyFn},onCheckBoxClick:function(){delete this.completeEdit;this.field.focus(false,10)},realign:function(a){var g=this,e=g.boundEl,h=e.first(),d=e.getWidth(),f=Ext.Array.clone(g.offsets),b=g.grid,c;if(g.isForTree){c=g.getTreeNodeOffset(h);d-=Math.abs(c);f[0]+=c}if(b.columnLines){d-=e.getBorderWidth("rl")}if(a===true){g.field.setWidth(d)}g.alignTo(h,g.alignment,f)},getTreeNodeOffset:function(a){return a.child(this.treeNodeSelector).getOffsetsTo(a)[0]},onEditorTab:function(b){var a=this.field;if(a.onEditorTab){a.onEditorTab(b)}},alignment:"l-l",hideEl:false,cls:Ext.baseCSSPrefix+"small-editor "+Ext.baseCSSPrefix+"grid-editor "+Ext.baseCSSPrefix+"grid-cell-editor",treeNodeSelector:"."+Ext.baseCSSPrefix+"tree-node-text",shim:false,shadow:false});