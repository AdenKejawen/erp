Ext.define("Ext.layout.container.Column",{extend:"Ext.layout.container.Auto",alias:["layout.column"],alternateClassName:"Ext.layout.ColumnLayout",type:"column",itemCls:Ext.baseCSSPrefix+"column",targetCls:Ext.baseCSSPrefix+"column-layout-ct",columnWidthSizePolicy:{readsWidth:0,readsHeight:1,setsWidth:1,setsHeight:0},createsInnerCt:true,manageOverflow:true,isItemShrinkWrap:function(a){return true},getItemSizePolicy:function(a,b){if(a.columnWidth){if(!b){b=this.owner.getSizeModel()}if(!b.width.shrinkWrap){return this.columnWidthSizePolicy}}return this.autoSizePolicy},calculateItems:function(d,a){var n=this,e=d.targetContext,m=d.childItems,k=m.length,b=0,f=a.gotWidth,h,o,g,c,j,l;if(f===false){e.domBlock(n,"width");h=true}else{if(f){o=a.width}else{return true}}for(g=0;g<k;++g){c=m[g];j=c.getMarginInfo().width;if(!c.widthModel.calculated){l=c.getProp("width");if(typeof l!="number"){c.block(n,"width");h=true}b+=l+j}}if(!h){o=(o<b)?0:o-b;for(g=0;g<k;++g){c=m[g];if(c.widthModel.calculated){j=c.marginInfo.width;l=c.target.columnWidth;l=Math.floor(l*o)-j;l=c.setWidth(l);b+=l+j}}d.setContentWidth(b+d.paddingContext.getPaddingInfo().width)}return !h},setCtSizeIfNeeded:function(b,d){var a=this,c=b.paddingContext.getPaddingInfo();a.callParent(arguments);if((Ext.isIEQuirks||Ext.isIE7m)&&a.isShrinkWrapTpl&&c.right){b.outerCtContext.setProp("width",d.width+c.left)}}});