Ext.define("Ext.direct.PollingProvider",{extend:"Ext.direct.JsonProvider",alias:"direct.pollingprovider",requires:["Ext.Ajax","Ext.util.DelayedTask"],uses:["Ext.direct.ExceptionEvent","Ext.direct.Manager"],interval:3000,constructor:function(a){var b=this;b.callParent(arguments);b.addEvents("beforepoll","poll")},isConnected:function(){return !!this.pollTask},connect:function(){var b=this,a=b.url;if(a&&!b.pollTask){b.pollTask=Ext.TaskManager.start({run:b.runPoll,interval:b.interval,scope:b});b.fireEvent("connect",b)}else{if(!a){Ext.Error.raise("Error initializing PollingProvider, no url configured.")}}},disconnect:function(){var a=this;if(a.pollTask){Ext.TaskManager.stop(a.pollTask);delete a.pollTask;a.fireEvent("disconnect",a)}},runPoll:function(){var b=this,a=b.url;if(b.fireEvent("beforepoll",b)!==false){if(Ext.isFunction(a)){a(b.baseParams)}else{Ext.Ajax.request({url:a,callback:b.onData,scope:b,params:b.baseParams})}b.fireEvent("poll",b)}},onData:function(e,g,b){var f=this,d,a,c;if(g){c=f.createEvents(b);for(d=0,a=c.length;d<a;++d){f.fireEvent("data",f,c[d])}}else{c=new Ext.direct.ExceptionEvent({data:null,code:Ext.direct.Manager.exceptions.TRANSPORT,message:"Unable to connect to the server.",xhr:b});f.fireEvent("data",f,c)}}});