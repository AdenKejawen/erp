Ext.define("Ext.container.Viewport",{extend:"Ext.container.Container",alias:"widget.viewport",requires:["Ext.EventManager"],alternateClassName:"Ext.Viewport",isViewport:true,ariaRole:"application",preserveElOnDestroy:true,viewportCls:Ext.baseCSSPrefix+"viewport",initComponent:function(){var c=this,a=document.body.parentNode,b=c.el=Ext.getBody();Ext.getScrollbarSize();c.width=c.height=undefined;c.callParent(arguments);Ext.fly(a).addCls(c.viewportCls);if(c.autoScroll){Ext.fly(a).setStyle(c.getOverflowStyle());delete c.autoScroll}b.setHeight=b.setWidth=Ext.emptyFn;b.dom.scroll="no";c.allowDomMove=false;c.renderTo=c.el},applyTargetCls:function(a){this.el.addCls(a)},onRender:function(){var a=this;a.callParent(arguments);a.width=Ext.Element.getViewportWidth();a.height=Ext.Element.getViewportHeight()},afterFirstLayout:function(){var a=this;a.callParent(arguments);setTimeout(function(){Ext.EventManager.onWindowResize(a.fireResize,a)},1)},fireResize:function(b,a){if(b!=this.width||a!=this.height){this.setSize(b,a)}},initHierarchyState:function(a){this.callParent([this.hierarchyState=Ext.rootHierarchyState])},beforeDestroy:function(){var a=this;a.removeUIFromElement();a.el.removeCls(a.baseCls);Ext.fly(document.body.parentNode).removeCls(a.viewportCls);a.callParent()}});