Ext.define("Ext.util.Sortable",{isSortable:true,defaultSortDirection:"ASC",requires:["Ext.util.Sorter"],statics:{createComparator:function(a){return a&&a.length?function(d,c){var b=a[0].sort(d,c),f=a.length,e=1;for(;e<f;e++){b=b||a[e].sort.call(this,d,c)}return b}:function(){return 0}}},initSortable:function(){var a=this,b=a.sorters;a.sorters=new Ext.util.AbstractMixedCollection(false,function(c){return c.id||c.property});if(b){a.sorters.addAll(a.decodeSorters(b))}},sort:function(f,e,b,d){var c=this,g,a;if(Ext.isArray(f)){d=b;b=e;a=f}else{if(Ext.isObject(f)){d=b;b=e;a=[f]}else{if(Ext.isString(f)){g=c.sorters.get(f);if(!g){g={property:f,direction:e};a=[g]}else{if(e===undefined){g.toggle()}else{g.setDirection(e)}}}}}if(a&&a.length){a=c.decodeSorters(a);if(Ext.isString(b)){if(b==="prepend"){c.sorters.insert(0,a)}else{c.sorters.addAll(a)}}else{c.sorters.clear();c.sorters.addAll(a)}}if(d!==false){c.fireEvent("beforesort",c,a);c.onBeforeSort(a);f=c.sorters.items;if(f.length){c.doSort(c.generateComparator())}}return f},generateComparator:function(){var a=this.sorters.getRange();return a.length?this.createComparator(a):this.emptyComparator},emptyComparator:function(){return 0},onBeforeSort:Ext.emptyFn,decodeSorters:function(f){if(!Ext.isArray(f)){if(f===undefined){f=[]}else{f=[f]}}var d=f.length,g=Ext.util.Sorter,a=this.model?this.model.prototype.fields:null,e,b,c;for(c=0;c<d;c++){b=f[c];if(!(b instanceof g)){if(Ext.isString(b)){b={property:b}}Ext.applyIf(b,{root:this.sortRoot,direction:"ASC"});if(b.fn){b.sorterFn=b.fn}if(typeof b=="function"){b={sorterFn:b}}if(a&&!b.transform){e=a.get(b.property);b.transform=e&&e.sortType!==Ext.identityFn?e.sortType:undefined}f[c]=new Ext.util.Sorter(b)}}return f},getSorters:function(){return this.sorters.items},getFirstSorter:function(){var c=this.sorters.items,a=c.length,b=0,d;for(;b<a;++b){d=c[b];if(!d.isGrouper){return d}}return null}},function(){this.prototype.createComparator=this.createComparator});