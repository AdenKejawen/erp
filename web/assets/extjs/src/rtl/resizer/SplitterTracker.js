Ext.define("Ext.rtl.resizer.SplitterTracker",{override:"Ext.resizer.SplitterTracker",getVertPrevConstrainLeft:function(a){return(!this.splitter.getHierarchyState().rtl!==!Ext.rootHierarchyState.rtl)?((a.prevCmp.maxWidth?a.prevBox.right-a.prevCmp.maxWidth:a.nextBox.x+(a.nextCmp.minWidth||a.defaultMin))-a.splitWidth):this.callParent(arguments)},getVertPrevConstrainRight:function(a){return(!this.splitter.getHierarchyState().rtl!==!Ext.rootHierarchyState.rtl)?a.prevBox.right-(a.prevCmp.minWidth||a.defaultMin):this.callParent(arguments)},getVertNextConstrainLeft:function(a){return(!this.splitter.getHierarchyState().rtl!==!Ext.rootHierarchyState.rtl)?a.nextBox.x+(a.nextCmp.minWidth||a.defaultMin):this.callParent(arguments)},getVertNextConstrainRight:function(a){return(!this.splitter.getHierarchyState().rtl!==!Ext.rootHierarchyState.rtl)?((a.nextCmp.maxWidth?a.nextBox.x+a.nextCmp.maxWidth:a.prevBox.right-(a.prevBox.minWidth||a.defaultMin))+a.splitWidth):this.callParent(arguments)},getResizeOffset:function(){var a=this.getOffset("dragTarget");if(!this.splitter.getHierarchyState().rtl!==!Ext.rootHierarchyState.rtl){a[0]=-a[0]}return a}});