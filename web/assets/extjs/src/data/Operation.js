Ext.define("Ext.data.Operation",{synchronous:true,action:undefined,filters:undefined,sorters:undefined,groupers:undefined,start:undefined,limit:undefined,batch:undefined,callback:undefined,scope:undefined,started:false,running:false,complete:false,success:undefined,exception:false,error:undefined,actionCommitRecordsRe:/^(?:create|update)$/i,actionSkipSyncRe:/^destroy$/i,constructor:function(a){Ext.apply(this,a||{})},commitRecords:function(m){var h=this,l=h.actionCommitRecordsRe.test(h.action),k,g,a,e,b,d,f,j,c;if(!h.actionSkipSyncRe.test(h.action)){a=h.records;if(a&&a.length){if(l){c=[]}if(a.length>1){if(h.action=="update"||a[0].clientIdProperty){k=new Ext.util.MixedCollection();k.addAll(m);for(g=a.length;g--;){b=a[g];e=k.findBy(h.matchClientRec,b);j=b.copyFrom(e);if(l){c.push(j)}}}else{for(d=0,f=a.length;d<f;++d){b=a[d];e=m[d];if(b&&e){j=h.updateRecord(b,e);if(l){c.push(j)}}}}}else{j=h.updateRecord(a[0],m[0]);if(l){c[0]=j}}if(l){for(g=a.length;g--;){a[g].commit(false,c[g])}}}}},updateRecord:function(a,b){if(b&&(a.phantom||a.getId()===b.getId())){return a.copyFrom(b)}return[]},matchClientRec:function(c){var a=this,b=a.getId();if(b&&c.getId()===b){return true}return c.internalId===a.internalId},setStarted:function(){this.started=true;this.running=true},setCompleted:function(){this.complete=true;this.running=false},setSuccessful:function(){this.success=true},setException:function(a){this.exception=true;this.success=false;this.running=false;this.error=a},hasException:function(){return this.exception===true},getError:function(){return this.error},getRecords:function(){var a=this.getResultSet();return this.records||(a?a.records:null)},getResultSet:function(){return this.resultSet},isStarted:function(){return this.started===true},isRunning:function(){return this.running===true},isComplete:function(){return this.complete===true},wasSuccessful:function(){return this.isComplete()&&this.success===true},setBatch:function(a){this.batch=a},allowWrite:function(){return this.action!="read"}});