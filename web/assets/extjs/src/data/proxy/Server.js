Ext.define("Ext.data.proxy.Server",{extend:"Ext.data.proxy.Proxy",alias:"proxy.server",alternateClassName:"Ext.data.ServerProxy",uses:["Ext.data.Request"],pageParam:"page",startParam:"start",limitParam:"limit",groupParam:"group",groupDirectionParam:"groupDir",sortParam:"sort",filterParam:"filter",directionParam:"dir",idParam:"id",simpleSortMode:false,simpleGroupMode:false,noCache:true,cacheString:"_dc",timeout:30000,constructor:function(a){var b=this;a=a||{};b.callParent([a]);b.extraParams=a.extraParams||{};b.api=Ext.apply({},a.api||b.api);b.nocache=b.noCache},create:function(){return this.doRequest.apply(this,arguments)},read:function(){return this.doRequest.apply(this,arguments)},update:function(){return this.doRequest.apply(this,arguments)},destroy:function(){return this.doRequest.apply(this,arguments)},setExtraParam:function(a,b){this.extraParams[a]=b},buildRequest:function(a){var c=this,d=a.params=Ext.apply({},a.params,c.extraParams),b;Ext.applyIf(d,c.getParams(a));if(a.id!==undefined&&d[c.idParam]===undefined){d[c.idParam]=a.id}b=new Ext.data.Request({params:d,action:a.action,records:a.records,operation:a,url:a.url,proxy:c});b.url=c.buildUrl(b);a.request=b;return b},processResponse:function(g,a,c,b,f,h){var e=this,d,i;if(g===true){d=e.getReader();d.applyDefaults=a.action==="read";i=d.read(e.extractResponseData(b));if(i.success!==false){Ext.apply(a,{response:b,resultSet:i});a.commitRecords(i.records);a.setCompleted();a.setSuccessful()}else{a.setException(i.message);e.fireEvent("exception",this,b,a)}}else{e.setException(a,b);e.fireEvent("exception",this,b,a)}if(typeof f=="function"){f.call(h||e,a)}e.afterRequest(c,g)},setException:function(b,a){b.setException({status:a.status,statusText:a.statusText})},extractResponseData:Ext.identityFn,applyEncoding:function(a){return Ext.encode(a)},encodeSorters:function(d){var b=[],c=d.length,a=0;for(;a<c;a++){b[a]={property:d[a].property,direction:d[a].direction}}return this.applyEncoding(b)},encodeFilters:function(d){var b=[],c=d.length,a=0;for(;a<c;a++){b[a]={property:d[a].property,value:d[a].value}}return this.applyEncoding(b)},getParams:function(o){var v=this,u={},r=Ext.isDefined,s=o.groupers,a=o.sorters,m=o.filters,h=o.page,g=o.start,t=o.limit,k=v.simpleSortMode,d=v.simpleGroupMode,q=v.pageParam,f=v.startParam,b=v.limitParam,c=v.groupParam,l=v.groupDirectionParam,e=v.sortParam,p=v.filterParam,n=v.directionParam,j,i;if(q&&r(h)){u[q]=h}if(f&&r(g)){u[f]=g}if(b&&r(t)){u[b]=t}j=c&&s&&s.length>0;if(j){if(d){u[c]=s[0].property;u[l]=s[0].direction||"ASC"}else{u[c]=v.encodeSorters(s)}}if(e&&a&&a.length>0){if(k){i=0;if(a.length>1&&j){i=1}u[e]=a[i].property;u[n]=a[i].direction}else{u[e]=v.encodeSorters(a)}}if(p&&m&&m.length>0){u[p]=v.encodeFilters(m)}return u},buildUrl:function(c){var b=this,a=b.getUrl(c);if(!a){Ext.Error.raise("You are using a ServerProxy but have not supplied it with a url.")}if(b.noCache){a=Ext.urlAppend(a,Ext.String.format("{0}={1}",b.cacheString,Ext.Date.now()))}return a},getUrl:function(a){return a.url||this.api[a.action]||this.url},doRequest:function(a,c,b){Ext.Error.raise("The doRequest function has not been implemented on your Ext.data.proxy.Server subclass. See src/data/ServerProxy.js for details")},afterRequest:Ext.emptyFn,onDestroy:function(){Ext.destroy(this.reader,this.writer)}});