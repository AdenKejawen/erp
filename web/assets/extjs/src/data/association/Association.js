Ext.define("Ext.data.association.Association",{alternateClassName:"Ext.data.Association",primaryKey:"id",defaultReaderType:"json",isAssociation:true,initialConfig:null,statics:{AUTO_ID:1000,create:function(a){if(Ext.isString(a)){a={type:a}}switch(a.type){case"belongsTo":return new Ext.data.association.BelongsTo(a);case"hasMany":return new Ext.data.association.HasMany(a);case"hasOne":return new Ext.data.association.HasOne(a);default:Ext.Error.raise('Unknown Association type: "'+a.type+'"')}return a}},constructor:function(a){Ext.apply(this,a);var d=this,b=Ext.ModelManager.types,c=a.ownerModel,f=a.associatedModel,e=b[c],g=b[f];d.initialConfig=a;if(e===undefined){Ext.Error.raise("The configured ownerModel was not valid (you tried "+c+")")}if(g===undefined){Ext.Error.raise("The configured associatedModel was not valid (you tried "+f+")")}d.ownerModel=e;d.associatedModel=g;Ext.applyIf(d,{ownerName:c,associatedName:f});d.associationId="association"+(++d.statics().AUTO_ID)},getReader:function(){var c=this,a=c.reader,b=c.associatedModel;if(a){if(Ext.isString(a)){a={type:a}}if(a.isReader){a.setModel(b)}else{Ext.applyIf(a,{model:b,type:c.defaultReaderType})}c.reader=Ext.createByAlias("reader."+a.type,a)}return c.reader||null}});