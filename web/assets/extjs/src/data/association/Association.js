Ext.define("Ext.data.association.Association",{alternateClassName:"Ext.data.Association",primaryKey:"id",associationKeyFunction:null,defaultReaderType:"json",isAssociation:true,initialConfig:null,statics:{AUTO_ID:1000,create:function(a){if(Ext.isString(a)){a={type:a}}switch(a.type){case"belongsTo":return new Ext.data.association.BelongsTo(a);case"hasMany":return new Ext.data.association.HasMany(a);case"hasOne":return new Ext.data.association.HasOne(a);default:Ext.Error.raise('Unknown Association type: "'+a.type+'"')}return a}},constructor:function(d){Ext.apply(this,d);var g=this,f=Ext.ModelManager.types,i=d.ownerModel,a=d.associatedModel,e=f[i],h=f[a],b=d.associationKey,c;if(b){c=String(b).search(/[\[\.]/);if(c>=0){g.associationKeyFunction=Ext.functionFactory("obj","return obj"+(c>0?".":"")+b)}}g.initialConfig=d;if(e===undefined){Ext.Error.raise("The configured ownerModel was not valid (you tried "+i+")")}if(h===undefined){Ext.Error.raise("The configured associatedModel was not valid (you tried "+a+")")}g.ownerModel=e;g.associatedModel=h;Ext.applyIf(g,{ownerName:i,associatedName:a});g.associationId="association"+(++g.statics().AUTO_ID)},getReader:function(){var c=this,a=c.reader,b=c.associatedModel;if(a){if(Ext.isString(a)){a={type:a}}if(a.isReader){a.setModel(b)}else{Ext.applyIf(a,{model:b,type:c.defaultReaderType})}c.reader=Ext.createByAlias("reader."+a.type,a)}return c.reader||null}});