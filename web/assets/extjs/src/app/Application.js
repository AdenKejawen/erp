Ext.define("Ext.app.Application",{extend:"Ext.app.Controller",requires:["Ext.tip.QuickTipManager"],scope:undefined,enableQuickTips:true,appFolder:"app",appProperty:"app",namespaces:[],autoCreateViewport:false,paths:null,onClassExtended:function(i,c,h){var b=Ext.app.Controller,d=i.prototype,k=[],e,j,a,f,g;a=c.name||i.superclass.name;g=c.appFolder||i.superclass.appFolder;if(a){c.$namespace=a;Ext.app.addNamespaces(a)}if(c.namespaces){Ext.app.addNamespaces(c.namespaces)}if(!c["paths processed"]){if(a&&g){Ext.Loader.setPath(a,g)}j=c.paths;if(j){for(f in j){if(j.hasOwnProperty(f)){Ext.Loader.setPath(f,j[f])}}}}else{delete c["paths processed"]}if(c.autoCreateViewport){if(!a){Ext.Error.raise("[Ext.app.Application] Can't resolve namespace for "+c.$className+", did you forget to specify 'name' property?")}b.processDependencies(d,k,a,"view",["Viewport"])}if(k.length){e=h.onBeforeCreated;h.onBeforeCreated=function(l,n){var m=Ext.Array.clone(arguments);Ext.require(k,function(){return e.apply(this,m)})}}},constructor:function(a){var b=this;if(Ext.isEmpty(b.name)){Ext.Error.raise("[Ext.app.Application] Name property is required")}b.callParent(arguments);b.doInit(b);b.initNamespace();b.initControllers();b.onBeforeLaunch();b.finishInitControllers()},initNamespace:function(){var c=this,a=c.appProperty,b;b=Ext.namespace(c.name);if(b){b.getApplication=function(){return c};if(a){if(!b[a]){b[a]=c}else{if(b[a]!==c){Ext.log.warn("An existing reference is being overwritten for "+name+"."+a+". See the appProperty config.")}}}}},initControllers:function(){var c=this,d=Ext.Array.from(c.controllers);c.controllers=new Ext.util.MixedCollection();for(var a=0,b=d.length;a<b;a++){c.getController(d[a])}},finishInitControllers:function(){var c=this,d,b,a;d=c.controllers.getRange();for(b=0,a=d.length;b<a;b++){d[b].finishInit(c)}},launch:Ext.emptyFn,onBeforeLaunch:function(){var b=this,e,f,d,a;if(b.enableQuickTips){b.initQuickTips()}if(b.autoCreateViewport){b.initViewport()}b.launch.call(b.scope||b);b.launched=true;b.fireEvent("launch",b);e=b.controllers.items;d=e.length;for(f=0;f<d;f++){a=e[f];a.onLaunch(b)}},getModuleClassName:function(a,b){return Ext.app.Controller.getFullName(a,b,this.name).absoluteName},initQuickTips:function(){Ext.tip.QuickTipManager.init()},initViewport:function(){var a=this.getView("Viewport");if(a){a.create()}},getController:function(b){var d=this,e=d.controllers,c,a;a=e.get(b);if(!a){c=d.getModuleClassName(b,"controller");a=Ext.create(c,{application:d,id:b});e.add(a);if(d._initialized){a.doInit(d)}}return a},getApplication:function(){return this}});