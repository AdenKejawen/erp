Ext.define("Ext.button.Cycle",{alias:"widget.cycle",extend:"Ext.button.Split",alternateClassName:"Ext.CycleButton",getButtonText:function(b){var a=this,c="";if(b&&a.showText===true){if(a.prependText){c+=a.prependText}c+=b.text;return c}return a.text},setActiveItem:function(c,a){var b=this;if(!Ext.isObject(c)){c=b.menu.getComponent(c)}if(c){if(!b.rendered){b.text=b.getButtonText(c);b.iconCls=c.iconCls;b.glyph=c.glyph}else{b.setText(b.getButtonText(c));b.setIconCls(c.iconCls);b.setGlyph(c.glyph)}b.activeItem=c;if(!c.checked){c.setChecked(true,false)}if(b.forceIcon){b.setIconCls(b.forceIcon)}if(b.forceGlyph){b.setGlyph(b.forceGlyph)}if(!a){b.fireEvent("change",b,c)}}},getActiveItem:function(){return this.activeItem},initComponent:function(){var f=this,e=0,b,c,a,d;f.addEvents("change");if(f.changeHandler){f.on("change",f.changeHandler,f.scope||f);delete f.changeHandler}b=(f.menu.items||[]).concat(f.items||[]);f.menu=Ext.applyIf({cls:Ext.baseCSSPrefix+"cycle-menu",items:[]},f.menu);a=b.length;for(c=0;c<a;c++){d=b[c];d=Ext.applyIf({group:f.id,itemIndex:c,checkHandler:f.checkHandler,scope:f,checked:d.checked||false},d);f.menu.items.push(d);if(d.checked){e=c}}f.itemCount=f.menu.items.length;f.callParent(arguments);f.on("click",f.toggleSelected,f);f.setActiveItem(e,f);if(f.width&&f.showText){f.addCls(Ext.baseCSSPrefix+"cycle-fixed-width")}},checkHandler:function(a,b){if(b){this.setActiveItem(a)}},toggleSelected:function(){var c=this,a=c.menu,b;b=c.activeItem.next(":not([disabled])")||a.items.getAt(0);b.setChecked(true)}});