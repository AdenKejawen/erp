Ext.define("Ext.fx.target.ElementCSS",{extend:"Ext.fx.target.Element",setAttr:function(m,e){var p={attrs:[],duration:[],easing:[]},l=m.length,f,n,h,k,c,b,g,d,a;for(g=0;g<l;g++){n=m[g];c=n.duration;k=n.easing;n=n.attrs;for(h in n){if(Ext.Array.indexOf(p.attrs,h)==-1){p.attrs.push(h.replace(/[A-Z]/g,function(i){return"-"+i.toLowerCase()}));p.duration.push(c+"ms");p.easing.push(k)}}}f=p.attrs.join(",");c=p.duration.join(",");k=p.easing.join(", ");for(g=0;g<l;g++){n=m[g].attrs;for(h in n){a=n[h].length;for(d=0;d<a;d++){b=n[h][d];b[0].setStyle(Ext.supports.CSS3Prefix+"TransitionProperty",e?"":f);b[0].setStyle(Ext.supports.CSS3Prefix+"TransitionDuration",e?"":c);b[0].setStyle(Ext.supports.CSS3Prefix+"TransitionTimingFunction",e?"":k);b[0].setStyle(h,b[1]);if(e){b=b[0].dom.offsetWidth}else{b[0].on(Ext.supports.CSS3TransitionEnd,function(){this.setStyle(Ext.supports.CSS3Prefix+"TransitionProperty",null);this.setStyle(Ext.supports.CSS3Prefix+"TransitionDuration",null);this.setStyle(Ext.supports.CSS3Prefix+"TransitionTimingFunction",null)},b[0],{single:true})}}}}}});